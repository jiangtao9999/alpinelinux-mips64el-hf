--- openjdk/common/autoconf/flags.m4.orig
+++ openjdk/common/autoconf/flags.m4
@@ -936,6 +936,8 @@
     *)
       ZERO_ARCHFLAG="${COMPILER_TARGET_BITS_FLAG}${OPENJDK_TARGET_CPU_BITS}"
   esac
+  # use the default for the package builds
+  ZERO_ARCHFLAG=""
   FLAGS_COMPILER_CHECK_ARGUMENTS([$ZERO_ARCHFLAG], [], [ZERO_ARCHFLAG=""])
   AC_SUBST(ZERO_ARCHFLAG)
 
--- openjdk/common/autoconf/platform.m4.orig
+++ openjdk/common/autoconf/platform.m4
@@ -54,6 +54,42 @@
       VAR_CPU_BITS=64
       VAR_CPU_ENDIAN=little
       ;;
+    mips)
+      VAR_CPU=mips
+      VAR_CPU_ARCH=mips
+      VAR_CPU_BITS=32
+      VAR_CPU_ENDIAN=big
+      ;;
+    mipsel)
+      VAR_CPU=mipsel
+      VAR_CPU_ARCH=mipsel
+      VAR_CPU_BITS=32
+      VAR_CPU_ENDIAN=little
+      ;;
+    mipsn32)
+      VAR_CPU=mipsn32
+      VAR_CPU_ARCH=mipsn32
+      VAR_CPU_BITS=32
+      VAR_CPU_ENDIAN=big
+      ;;
+    mipsn32el)
+      VAR_CPU=mipsn32el
+      VAR_CPU_ARCH=mipsn32el
+      VAR_CPU_BITS=32
+      VAR_CPU_ENDIAN=little
+      ;;
+    mips64)
+      VAR_CPU=mips64
+      VAR_CPU_ARCH=mips64
+      VAR_CPU_BITS=64
+      VAR_CPU_ENDIAN=big
+      ;;
+    mips64el)
+      VAR_CPU=mips64el
+      VAR_CPU_ARCH=mips64el
+      VAR_CPU_BITS=64
+      VAR_CPU_ENDIAN=little
+      ;;
     powerpc)
       VAR_CPU=ppc
       VAR_CPU_ARCH=ppc
@@ -385,6 +421,8 @@
 
   # ZERO_ARCHDEF is used to enable architecture-specific code
   case "${OPENJDK_TARGET_CPU}" in
+    mips|mipsn32|mips64)  ZERO_ARCHDEF=MIPS ;;
+    mipsel|mipsn32el|mips64el)  ZERO_ARCHDEF=MIPSEL ;;
     ppc)     ZERO_ARCHDEF=PPC32 ;;
     ppc64)   ZERO_ARCHDEF=PPC64 ;;
     s390*)   ZERO_ARCHDEF=S390  ;;
--- openjdk/hotspot/src/cpu/zero/vm/cppInterpreter_zero.cpp.orig
+++ openjdk/hotspot/src/cpu/zero/vm/cppInterpreter_zero.cpp
@@ -369,7 +369,7 @@
   ThreadStateTransition::transition_from_java(thread, _thread_in_native);
 
   // Make the call
-  intptr_t result[4 - LogBytesPerWord];
+  intptr_t result[4 - LogBytesPerWord] __attribute__((__aligned__(__alignof__(double))));
   ffi_call(handler->cif(), (void (*)()) function, result, arguments);
 
   // Change the thread state back to _thread_in_Java.
