musl uses an `int` instead of a `unsigend long` for the ioctl function
prototype, contrary to glibc, since POSIX mandates the former. This
causes a spurious error on ppc64le which can be silenced by casting to
int explicitly.

See https://www.openwall.com/lists/musl/2020/01/20/2

diff -upr ccache-4.3.orig/src/Util.cpp ccache-4.3/src/Util.cpp
--- ccache-4.3.orig/src/Util.cpp	2021-10-26 20:08:52.043967336 +0200
+++ ccache-4.3/src/Util.cpp	2021-10-26 20:09:08.797534622 +0200
@@ -246,7 +246,7 @@ clone_file(const std::string& src, const
     }
   }
 
-  if (ioctl(*dest_fd, FICLONE, *src_fd) != 0) {
+  if (ioctl(*dest_fd, (int)FICLONE, *src_fd) != 0) {
     throw Error(strerror(errno));
   }
 
